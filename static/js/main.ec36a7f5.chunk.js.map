{"version":3,"sources":["components/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","props","type","value","amount","onChange","onChangeAmount","name","id","selectedCurrency","onChangeCurrency","currencyOptions","map","option","index","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","setAmount","amountInFromCurrency","setAmountInFromCurrency","exchangeRate","setExchangeRate","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAaeA,MAXf,SAAmBC,GACf,OACI,qCACA,uBAAOC,KAAK,SAASC,MAAOF,EAAMG,OAAQC,SAAYJ,EAAMK,iBAC5D,wBAAQC,KAAK,GAAGC,GAAG,GAAGL,MAAOF,EAAMQ,iBAAkBJ,SAAYJ,EAAMS,iBAAvE,SACKT,EAAMU,gBAAgBC,KAAI,SAACC,EAAQC,GAAT,OAAmB,wBAAQX,MAAOU,EAAf,SAAoCA,GAARC,Y,OCHhFC,EAAW,uFA0DFC,MAxDf,WACE,IAOEC,EAAUC,EAPZ,EAA8CC,mBAAS,IAAvD,mBAAOR,EAAP,KAAwBS,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA4BL,mBAAS,GAArC,mBAAOf,EAAP,KAAeqB,EAAf,KACA,EAAwDN,oBAAS,GAAjE,mBAAOO,EAAP,KAA6BC,EAA7B,KACA,EAAwCR,qBAAxC,mBAAOS,EAAP,KAAqBC,EAArB,KAwCA,OArCCH,GACDR,EAAad,EACba,EAAWb,EAAOwB,IAElBX,EAAWb,EACXc,EAAad,EAAOwB,GAGtBE,qBAAU,WACRC,MAAMhB,GACHiB,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAM,SAAAG,GACL,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CnB,EAAmB,CAACe,EAAKK,MAAP,mBAAeH,OAAOC,KAAKH,EAAKI,UAClDjB,EAAgBa,EAAKK,MACrBhB,EAAcY,GACdP,EAAgBM,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GACzBQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAgBM,EAAKI,MAAMhB,SAE5C,CAACF,EAAcE,IAYf,qCACC,oDACA,cAAC,EAAD,CAAWZ,gBAAiBA,EAAiBF,iBAAkBY,EAAcX,iBAAkB,SAAA+B,GAAC,OAAInB,EAAgBmB,EAAEC,OAAOvC,QAAQG,eAZ1G,SAACmC,GAC9BhB,EAAUgB,EAAEC,OAAOvC,OACnBwB,GAAwB,IAUuJvB,OAAQc,IACrL,qBAAKyB,UAAU,QAAf,SAAuB,cAAC,IAAD,MACvB,cAAC,EAAD,CAAWhC,gBAAiBA,EAAiBF,iBAAkBc,EAAYb,iBAAkB,SAAA+B,GAAC,OAAIjB,EAAciB,EAAEC,OAAOvC,QAAQG,eAVxG,SAACmC,GAC5BhB,EAAUgB,EAAEC,OAAOvC,OACnBwB,GAAwB,IAQiJvB,OAAQa,QC7CpK2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.ec36a7f5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Converter(props) {\r\n    return (\r\n        <>\r\n        <input type=\"number\" value={props.amount} onChange = {props.onChangeAmount} />\r\n        <select name=\"\" id=\"\" value={props.selectedCurrency} onChange = {props.onChangeCurrency}>\r\n            {props.currencyOptions.map((option, index) => <option value={option} key={index}>{option}</option>)}\r\n        </select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Converter\r\n","import { useEffect, useState } from \"react\";\nimport './App.css';\nimport Converter from './components/Converter';\nimport {FaArrowsAltV} from 'react-icons/fa';\nconst BASE_URL = \"http://data.fixer.io/api/latest?access_key=434653cdde5e98ee627ec2027917d78d&format=1\";\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n  const [exchangeRate, setExchangeRate] = useState();\n\nlet toAmount, fromAmount;\nif(amountInFromCurrency){\n  fromAmount = amount\n  toAmount = amount*exchangeRate\n}else{\n  toAmount = amount\n  fromAmount = amount/exchangeRate\n}\n\nuseEffect(() => {\n  fetch(BASE_URL)\n    .then (res => res.json())\n    .then (data => {\n      const firstCurrency = Object.keys(data.rates)[0]\n      setCurrencyOptions([data.base,...Object.keys(data.rates)])\n      setFromCurrency(data.base)\n      setToCurrency(firstCurrency)\n      setExchangeRate(data.rates[firstCurrency])\n    })\n}, [])\n\nuseEffect(() => {\n  if(fromCurrency != null && toCurrency != null){\n    fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))\n  }\n}, [fromCurrency, toCurrency])\n\nconst handleFromAmountChange = (e) => {\n  setAmount(e.target.value)\n  setAmountInFromCurrency(true)\n}\nconst handleToAmountChange = (e) => {\n  setAmount(e.target.value)\n  setAmountInFromCurrency(false)\n}\n\n  return (\n   <>\n    <h1>Currency Converter</h1>\n    <Converter currencyOptions={currencyOptions} selectedCurrency={fromCurrency} onChangeCurrency={e => setFromCurrency(e.target.value)} onChangeAmount={handleFromAmountChange} amount={fromAmount} />\n    <div className=\"arrow\"><FaArrowsAltV /></div>\n    <Converter currencyOptions={currencyOptions} selectedCurrency={toCurrency} onChangeCurrency={e => setToCurrency(e.target.value)} onChangeAmount={handleToAmountChange} amount={toAmount} />\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}