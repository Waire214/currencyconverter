{"version":3,"sources":["components/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","props","type","value","amount","onChange","onChangeAmount","name","id","selectedCurr","onChangeSelectedCurr","currOptions","map","option","App","toAmount","fromAmount","BASE_URL","useState","setCurrOptions","fromCurr","setFromCurr","toCurr","setToCurr","setAmount","amountInFromCurr","setAmountInFromCurr","exchangeRate","setExchangeRate","useEffect","fetch","then","res","json","data","firstCurr","Object","keys","rates","base","console","log","e","target","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAaeA,MAXf,SAAmBC,GACf,OACI,qCACA,uBAAOC,KAAK,SAASC,MAAQF,EAAMG,OAAQC,SAAYJ,EAAMK,iBAC7D,wBAAQC,KAAK,GAAGC,GAAG,GAAGL,MAAOF,EAAMQ,aAAcJ,SAAYJ,EAAMS,qBAAnE,SACKT,EAAMU,YAAYC,KAAI,SAAAC,GAAM,OAAI,wBAAQV,MAAOU,EAAf,SAAqCA,GAATA,Y,OCsD1DC,MAxDf,WACE,IAiCIC,EAAUC,EAjCRC,EAAW,mCAEjB,EAAsCC,mBAAS,IAA/C,mBAAOP,EAAP,KAAoBQ,EAApB,KACA,EAAgCD,qBAAhC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA4BH,qBAA5B,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA4BL,mBAAS,GAArC,mBAAOd,EAAP,KAAeoB,EAAf,KACA,EAAgDN,oBAAS,GAAzD,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EAAwCR,qBAAxC,mBAAOS,EAAP,KAAqBC,EAArB,KAsCA,OApCAC,qBAAW,WACTC,MAAMb,GACHc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAYC,OAAOC,KAAKH,EAAKI,OAAO,GAC1CnB,EAAe,CAACe,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UAC/CE,QAAQC,IAAIP,GACZb,EAAYa,EAAKK,MACjBhB,EAAUY,GACVP,EAAgBM,EAAKI,MAAMH,SAE/B,IAEJN,qBAAU,WACO,MAAZT,GAA8B,MAAVE,GACrBQ,MAAM,GAAD,OAAIb,EAAJ,iBAAqBG,EAArB,oBAAyCE,IAC7CS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAgBM,EAAKI,MAAMhB,SAE1C,CAACF,EAAUE,IAMRG,GACFT,EAAaZ,EACbW,EAAWX,EAASuB,IAEpBZ,EAAWX,EACXY,EAAaZ,EAASuB,GAOvB,qCACA,cAAC,EAAD,CAAWhB,YAAeA,EAAaF,aAAgBW,EAAUV,qBAjBjC,SAACgC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOxC,QAiBuDC,OAAUY,EAAYV,eAN3G,SAACoC,GAAOlB,EAAUkB,EAAEC,OAAOxC,OAAQuB,GAAoB,MAOrF,qBAAKkB,UAAU,QAAf,SAAuB,cAAC,IAAD,MACvB,cAAC,EAAD,CAAWjC,YAAeA,EAAaF,aAAgBa,EAAQZ,qBAlBjC,SAACgC,GAAD,OAAOnB,EAAUmB,EAAEC,OAAOxC,QAkBuDC,OAAUW,EAAUT,eAPvG,SAACoC,GAAOlB,EAAUkB,EAAEC,OAAOxC,OAAQuB,GAAoB,UCpCvEmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.55f4d586.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Converter(props) {\r\n    return (\r\n        <>\r\n        <input type=\"number\" value= {props.amount} onChange = {props.onChangeAmount} />\r\n        <select name=\"\" id=\"\" value={props.selectedCurr} onChange = {props.onChangeSelectedCurr}>\r\n            {props.currOptions.map(option => <option value={option} key={option}>{option}</option>)}\r\n        </select>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Converter\r\n","import { useEffect, useState } from \"react\";\nimport './App.css';\nimport Converter from './components/Converter';\nimport {FaArrowsAltV} from 'react-icons/fa';\n\nfunction App() {\n  const BASE_URL = \"https://data.fixer.io/api/latest\";\n\n  const [currOptions, setCurrOptions] = useState([]);\n  const [fromCurr, setFromCurr] = useState();\n  const [toCurr, setToCurr] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurr, setAmountInFromCurr] = useState(true);\n  const [exchangeRate, setExchangeRate] = useState();\n\n  useEffect( () => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        const firstCurr = Object.keys(data.rates)[0];\n        setCurrOptions([data.base, ...Object.keys(data.rates)])\n        console.log(data);\n        setFromCurr(data.base);\n        setToCurr(firstCurr);\n        setExchangeRate(data.rates[firstCurr])\n      })\n  },[])\n\nuseEffect(() => {\n  if(fromCurr != null && toCurr != null){\n    fetch(`${BASE_URL}?base=${fromCurr}&symbols=${toCurr}`)\n    .then(res => res.json())\n    .then(data => setExchangeRate(data.rates[toCurr]))\n  }\n}, [fromCurr, toCurr])\n\n  const onChangeSelectedFromCurr = (e) => setFromCurr(e.target.value);\n  const onChangeSelectedToCurr = (e) => setToCurr(e.target.value);\n\n  let toAmount, fromAmount;\n  if (amountInFromCurr){\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  }else{\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n  const handleFromAmountChange = (e) => {setAmount(e.target.value); setAmountInFromCurr(true)}\n  const handleToAmountChange = (e) => {setAmount(e.target.value); setAmountInFromCurr(false)}\n  \n\n  return (\n   <>\n   <Converter currOptions = {currOptions} selectedCurr = {fromCurr} onChangeSelectedCurr = {onChangeSelectedFromCurr} amount = {fromAmount} onChangeAmount = {handleFromAmountChange} />\n   <div className=\"arrow\"><FaArrowsAltV /></div>\n   <Converter currOptions = {currOptions} selectedCurr = {toCurr} onChangeSelectedCurr = {onChangeSelectedToCurr} amount = {toAmount} onChangeAmount = {handleToAmountChange} />\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}